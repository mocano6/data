generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Team {
  id        String   @id @default(uuid())
  name      String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  matches   Match[]
  players   Player[] @relation("PlayerToTeam")
}

model Player {
  id                String           @id @default(uuid())
  name              String
  number            Int
  position          String?
  birthYear         Int?
  imageUrl          String?
  createdAt         DateTime         @default(now())
  updatedAt         DateTime         @updatedAt
  actionsAsReceiver ActionsPacking[] @relation("ActionReceiver")
  actionsAsSender   ActionsPacking[] @relation("ActionSender")
  playerMinutes     PlayerMinutes[]
  teams             Team[]           @relation("PlayerToTeam")
}

model Match {
  id            String           @id @default(uuid())
  teamId        String
  opponent      String
  isHome        Boolean
  competition   String
  date          DateTime
  time          String?
  createdAt     DateTime         @default(now())
  updatedAt     DateTime         @updatedAt
  actions       ActionsPacking[]
  team          Team             @relation(fields: [teamId], references: [id])
  playerMinutes PlayerMinutes[]

  @@index([teamId])
}

model PlayerMinutes {
  id          String   @id @default(uuid())
  matchId     String
  playerId    String
  startMinute Int
  endMinute   Int
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  match       Match    @relation(fields: [matchId], references: [id])
  player      Player   @relation(fields: [playerId], references: [id])

  @@index([matchId])
  @@index([playerId])
}

model ActionsPacking {
  id                 String   @id @default(uuid())
  minute             Int
  senderId           String
  senderName         String
  senderNumber       Int
  senderClickValue   Float
  receiverId         String
  receiverName       String
  receiverNumber     Int
  receiverClickValue Float
  packingPoints      Int
  actionType         String
  xTValue            Float
  PxT                Float?
  isP3               Boolean
  isShot             Boolean
  isGoal             Boolean
  isPenaltyAreaEntry Boolean?
  isSecondHalf       Boolean? @default(false)
  matchId            String
  createdAt          DateTime @default(now())
  updatedAt          DateTime @updatedAt
  startZone          String?  @map("startZone")
  endZone            String?  @map("endZone")
  match              Match    @relation(fields: [matchId], references: [id])
  receiver           Player   @relation("ActionReceiver", fields: [receiverId], references: [id])
  sender             Player   @relation("ActionSender", fields: [senderId], references: [id])

  @@index([matchId])
  @@index([senderId])
  @@index([receiverId])
}
