(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[177],{347:()=>{},2888:(o,n,e)=>{"use strict";e.d(n,{_w:()=>c,ZG:()=>l,r4:()=>i}),"undefined"!=typeof crypto&&crypto.randomUUID&&crypto.randomUUID.bind(crypto),new Uint8Array(16);let t=[];for(let o=0;o<256;++o)t.push((o+256).toString(16).slice(1));let r="packing_analyzer_pending_requests",a=()=>navigator.onLine,c=()=>{let o=localStorage.getItem(r);return o?JSON.parse(o):[]},i=async()=>{if(!a()){console.log("Nie można zsynchronizować żądań: brak połączenia");return}let o=c();if(0===o.length)return;console.log("Rozpoczęto synchronizację ".concat(o.length," oczekujących żądań"));let n=[...o].sort((o,n)=>o.timestamp-n.timestamp),e=[];for(let o of n)try{let n={method:o.method,headers:{"Content-Type":"application/json"}};o.body&&(n.body=JSON.stringify(o.body));let e=await fetch(o.url,n);if(!e.ok)throw Error("API error: ".concat(e.status));console.log("Zsynchronizowano żądanie: ".concat(o.method," ").concat(o.url))}catch(n){console.error("Nie udało się zsynchronizować żądania: ".concat(o.method," ").concat(o.url),n),e.push(o)}localStorage.setItem(r,JSON.stringify(e)),0===e.length?console.log("Wszystkie żądania zostały zsynchronizowane"):console.log("Pozostało ".concat(e.length," żądań do synchronizacji"))},s=()=>{window.addEventListener("online",()=>{console.log("Przywr\xf3cono połączenie. Rozpoczynam synchronizację."),i()}),window.addEventListener("offline",()=>{console.log("Utracono połączenie. Aplikacja działa w trybie offline.")})},l=()=>{s(),a()&&i()}},6903:(o,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>c});var t=e(5155);e(347);var r=e(2115),a=e(2888);function c(o){let{children:n}=o;return(0,r.useEffect)(()=>{(0,a.ZG)()},[]),(0,t.jsx)("html",{lang:"en",suppressHydrationWarning:!0,children:(0,t.jsx)("body",{suppressHydrationWarning:!0,children:n})})}},9776:(o,n,e)=>{Promise.resolve().then(e.bind(e,6903))}},o=>{var n=n=>o(o.s=n);o.O(0,[690,441,684,358],()=>n(9776)),_N_E=o.O()}]);